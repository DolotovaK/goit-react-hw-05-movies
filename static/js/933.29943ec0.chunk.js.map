{"version":3,"file":"static/js/933.29943ec0.chunk.js","mappings":"6NAEQA,EAASC,EAAQ,IAAjBD,KAGFE,GAAaC,EAFSF,EAAQ,KAA5BG,SAEkBJ,EAAPG,CAAH,+OAcT,SAASE,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,SAC3B,OACI,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACI,SAAC,MAAD,CAAmBE,KAAK,OACvBD,IAGZ,C,uCCpBc,SAASE,IAAgB,IAAD,IAC3BC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBZ,GAAIa,MAAK,SAAAV,GAAK,OAAIC,EAASD,EAAb,IAAqBW,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAb,GACjE,GAAE,CAACL,IAEJ,IAAQe,EAAuDZ,EAAvDY,YAAaC,EAA0Cb,EAA1Ca,MAAOC,EAAmCd,EAAnCc,aAAcC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAGpD,OACI,4BACKd,IAAU,yBAAIA,EAAMe,QAAV,gCACX,SAACzB,EAAD,CAAUC,GAAIW,EAAd,sBACEF,IACE,iCACI,iBAAKgB,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQC,OAAQ,UAApD,WACI,gBACIC,IACoB,OAAhBV,EAXb,kCAY4BA,EACT,sCAEVW,IAAKV,EACLW,MAAM,MACNC,QAAQ,UAEZ,iBACIP,MAAO,CAAEC,QAAS,OAAQO,cAAe,SAAUN,IAAK,QAD5D,WAGI,4BACI,wBAAKP,KACL,wCAAgBc,OAAOb,GAAcc,QAAQ,UAEjD,4BACI,sCACA,uBAAIb,QAER,4BACI,oCACA,uBACKC,GAAUA,EAAOa,OACZb,EAAOc,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,wCAKtB,gBACIf,MAAO,CACHG,OAAQ,SACRa,aAAc,kBACdC,UAAW,mBAJnB,UAOI,2BACI,yBACI,SAAC,EAAAhD,KAAD,CAAMM,GAAG,OAAT,qBAEJ,yBACI,SAAC,EAAAN,KAAD,CAAMM,GAAG,UAAT,gCAMpB,SAAC,EAAA2C,SAAD,CAAUC,UAAU,gDAApB,UACI,SAAC,KAAD,QAIf,C,sICjFKC,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,MAAM,GAAD,OACvBF,EADuB,6CACsBD,IAF7C,WACCI,EADD,QAISC,GAJT,sBAKG,IAAIC,MAAM,UALb,uBAOQF,EAASG,OAPjB,0GAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBN,MAAM,GAAD,OACvBF,EADuB,8BACOQ,EADP,4BACgCT,IAFvD,WACCI,EADD,QAISC,GAJT,sBAKG,IAAIC,MAAM,UALb,uBAOQF,EAASG,OAPjB,0GAUA,SAAepC,EAAtB,kC,aAAO,O,oBAAA,WAA+BZ,GAA/B,uFACkB4C,MAAM,GAAD,OAAIF,EAAJ,iBAAqB1C,EAArB,qBAAoCyC,IAD3D,WACCI,EADD,QAESC,GAFT,sBAGG,IAAIC,MAAM,QAHb,uBAKQF,EAASG,OALjB,0G","sources":["components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import { HiArrowCircleLeft } from \"react-icons/hi\";\n\nconst { Link } = require(\"react-router-dom\");\nconst { default: styled } = require(\"styled-components\");\n\nconst StyledLink = styled(Link)`\ndisplay: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n  `;\n\nexport function BackLink({ to, children }) {\n    return (\n        <StyledLink to={to}>\n            <HiArrowCircleLeft size=\"24\" />\n            {children}\n        </StyledLink>\n    );\n};","import { BackLink } from \"components/BackLink/BackLink\";\nimport { Suspense, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovieDetails } from \"services/fetchMovies\";\n\nexport default function MovieDetails() {\n    const { id } = useParams();\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        getMovieDetails(id).then(movie => setMovie(movie)).catch(error => setError(error));\n    }, [id]);\n\n    const { poster_path, title, vote_average, overview, genres } = movie\n    const poster = 'https://image.tmdb.org/t/p/w500';\n\n    return (\n        <main>\n            {error && (<p>{error.message}! Please reload the page.</p>)}\n            <BackLink to={backLinkHref}>Go Back</BackLink>\n            {!error && (\n                <>\n                    <div style={{ display: 'flex', gap: '50px', margin: '16px 0' }}>\n                        <img\n                            src={\n                                poster_path !== null\n                                    ? poster + poster_path\n                                    : 'https://via.placeholder.com/300x450'\n                            }\n                            alt={title}\n                            width=\"300\"\n                            loading='lazy'\n                        />\n                        <div\n                            style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n                        >\n                            <div>\n                                <h2>{title}</h2>\n                                <p>User score: {Number(vote_average).toFixed(1)}</p>\n                            </div>\n                            <div>\n                                <h3>Overview</h3>\n                                <p>{overview}</p>\n                            </div>\n                            <div>\n                                <h3>Genres</h3>\n                                <p>\n                                    {genres && genres.length\n                                        ? genres.map(genre => genre.name).join(', ')\n                                        : 'There are no known genres'}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            margin: '16px 0',\n                            borderBottom: '1px solid black',\n                            borderTop: '1px solid black',\n                        }}\n                    >\n                        <ul>\n                            <li>\n                                <Link to=\"cast\">Cast</Link>\n                            </li>\n                            <li>\n                                <Link to=\"reviews\">Reviews</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </>\n            )}\n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n            </Suspense>\n        </main>\n    );\n};","const API_KEY = '958b0b84a8c5fc6fca7bdd68332f6832';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?page=1&api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed');\n  }\n  return await response.json();\n}\n\nexport async function getSeachMovies(query) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?query=${query}&page=1&&api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed');\n  }\n  return await response.json();\n}\n\nexport async function getMovieDetails(id) {\n  const response = await fetch(`${BASE_URL}movie/${id}?&api_key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Fail');\n  }\n  return await response.json();\n}\n\n// export async function getMovieActors(id) {\n//   const response = await fetch(\n//     `${BASE_URL}${id}/movie/credits?&api_key=${API_KEY}`\n//   );\n//   if (!response.ok) {\n//     throw new Error('Fail');\n//   }\n//   return await response.json();\n// }\n\n// export async function getMovieReviews(id) {\n//   const response = await fetch(\n//     `${BASE_URL}${id}/movie/reviews?page=1&&api_key=${API_KEY}`\n//   );\n//   if (!response.ok) {\n//     throw new Error('Fail');\n//   }\n//   return await response.json();\n// }\n"],"names":["Link","require","StyledLink","styled","default","BackLink","to","children","size","MovieDetails","id","useParams","useState","movie","setMovie","error","setError","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","then","catch","poster_path","title","vote_average","overview","genres","message","style","display","gap","margin","src","alt","width","loading","flexDirection","Number","toFixed","length","map","genre","name","join","borderBottom","borderTop","Suspense","fallback","API_KEY","BASE_URL","getTrendingMovies","fetch","response","ok","Error","json","getSeachMovies","query"],"sourceRoot":""}